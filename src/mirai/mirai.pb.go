// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: mirai.proto

package mirai

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageChannel int32

const (
	MessageChannel_message MessageChannel = 0
	MessageChannel_event   MessageChannel = 1
	MessageChannel_all     MessageChannel = 2
)

// Enum value maps for MessageChannel.
var (
	MessageChannel_name = map[int32]string{
		0: "message",
		1: "event",
		2: "all",
	}
	MessageChannel_value = map[string]int32{
		"message": 0,
		"event":   1,
		"all":     2,
	}
)

func (x MessageChannel) Enum() *MessageChannel {
	p := new(MessageChannel)
	*p = x
	return p
}

func (x MessageChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[0].Descriptor()
}

func (MessageChannel) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[0]
}

func (x MessageChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageChannel.Descriptor instead.
func (MessageChannel) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{0}
}

type MessageType int32

const (
	MessageType_FriendMessage      MessageType = 0
	MessageType_GroupMessage       MessageType = 1
	MessageType_TempMessage        MessageType = 2
	MessageType_StrangerMessage    MessageType = 3
	MessageType_OtherClientMessage MessageType = 4
	//Events
	MessageType_BotOnlineEvent                       MessageType = 5
	MessageType_BotOfflineEventActive                MessageType = 6
	MessageType_BotOfflineEventForce                 MessageType = 7
	MessageType_BotOfflineEventDropped               MessageType = 8
	MessageType_BotReloginEvent                      MessageType = 9
	MessageType_FriendInputStatusChangedEvent        MessageType = 10
	MessageType_FriendNickChangedEvent               MessageType = 11
	MessageType_BotGroupPermissionChangeEvent        MessageType = 12
	MessageType_BotMuteEvent                         MessageType = 13
	MessageType_BotUnmuteEvent                       MessageType = 14
	MessageType_BotJoinGroupEvent                    MessageType = 15
	MessageType_BotLeaveEventActive                  MessageType = 16
	MessageType_BotLeaveEventKick                    MessageType = 17
	MessageType_GroupRecallEvent                     MessageType = 18
	MessageType_FriendRecallEvent                    MessageType = 19
	MessageType_NudgeEvent                           MessageType = 20
	MessageType_GroupNameChangeEvent                 MessageType = 21
	MessageType_GroupEntranceAnnouncementChangeEvent MessageType = 22
	MessageType_GroupMuteAllEvent                    MessageType = 23
	MessageType_GroupAllowAnonymousChatEvent         MessageType = 24
	MessageType_GroupAllowConfessTalkEvent           MessageType = 25
	MessageType_GroupAllowMemberInviteEvent          MessageType = 26
	MessageType_MemberJoinEvent                      MessageType = 27
	MessageType_MemberLeaveEventKick                 MessageType = 28
	MessageType_MemberLeaveEventQuit                 MessageType = 29
	MessageType_MemberCardChangeEvent                MessageType = 30
	MessageType_MemberSpecialTitleChangeEvent        MessageType = 31
	MessageType_MemberPermissionChangeEvent          MessageType = 32
	MessageType_MemberMuteEvent                      MessageType = 33
	MessageType_MemberUnmuteEvent                    MessageType = 34
	MessageType_MemberHonorChangeEvent               MessageType = 35
	MessageType_NewFriendRequestEvent                MessageType = 36
	MessageType_MemberJoinRequestEvent               MessageType = 37
	MessageType_BotInvitedJoinGroupRequestEvent      MessageType = 38
	MessageType_OtherClientOnlineEvent               MessageType = 39
	MessageType_OtherClientOfflineEvent              MessageType = 40
	MessageType_CommandExecutedEvent                 MessageType = 41
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "FriendMessage",
		1:  "GroupMessage",
		2:  "TempMessage",
		3:  "StrangerMessage",
		4:  "OtherClientMessage",
		5:  "BotOnlineEvent",
		6:  "BotOfflineEventActive",
		7:  "BotOfflineEventForce",
		8:  "BotOfflineEventDropped",
		9:  "BotReloginEvent",
		10: "FriendInputStatusChangedEvent",
		11: "FriendNickChangedEvent",
		12: "BotGroupPermissionChangeEvent",
		13: "BotMuteEvent",
		14: "BotUnmuteEvent",
		15: "BotJoinGroupEvent",
		16: "BotLeaveEventActive",
		17: "BotLeaveEventKick",
		18: "GroupRecallEvent",
		19: "FriendRecallEvent",
		20: "NudgeEvent",
		21: "GroupNameChangeEvent",
		22: "GroupEntranceAnnouncementChangeEvent",
		23: "GroupMuteAllEvent",
		24: "GroupAllowAnonymousChatEvent",
		25: "GroupAllowConfessTalkEvent",
		26: "GroupAllowMemberInviteEvent",
		27: "MemberJoinEvent",
		28: "MemberLeaveEventKick",
		29: "MemberLeaveEventQuit",
		30: "MemberCardChangeEvent",
		31: "MemberSpecialTitleChangeEvent",
		32: "MemberPermissionChangeEvent",
		33: "MemberMuteEvent",
		34: "MemberUnmuteEvent",
		35: "MemberHonorChangeEvent",
		36: "NewFriendRequestEvent",
		37: "MemberJoinRequestEvent",
		38: "BotInvitedJoinGroupRequestEvent",
		39: "OtherClientOnlineEvent",
		40: "OtherClientOfflineEvent",
		41: "CommandExecutedEvent",
	}
	MessageType_value = map[string]int32{
		"FriendMessage":                        0,
		"GroupMessage":                         1,
		"TempMessage":                          2,
		"StrangerMessage":                      3,
		"OtherClientMessage":                   4,
		"BotOnlineEvent":                       5,
		"BotOfflineEventActive":                6,
		"BotOfflineEventForce":                 7,
		"BotOfflineEventDropped":               8,
		"BotReloginEvent":                      9,
		"FriendInputStatusChangedEvent":        10,
		"FriendNickChangedEvent":               11,
		"BotGroupPermissionChangeEvent":        12,
		"BotMuteEvent":                         13,
		"BotUnmuteEvent":                       14,
		"BotJoinGroupEvent":                    15,
		"BotLeaveEventActive":                  16,
		"BotLeaveEventKick":                    17,
		"GroupRecallEvent":                     18,
		"FriendRecallEvent":                    19,
		"NudgeEvent":                           20,
		"GroupNameChangeEvent":                 21,
		"GroupEntranceAnnouncementChangeEvent": 22,
		"GroupMuteAllEvent":                    23,
		"GroupAllowAnonymousChatEvent":         24,
		"GroupAllowConfessTalkEvent":           25,
		"GroupAllowMemberInviteEvent":          26,
		"MemberJoinEvent":                      27,
		"MemberLeaveEventKick":                 28,
		"MemberLeaveEventQuit":                 29,
		"MemberCardChangeEvent":                30,
		"MemberSpecialTitleChangeEvent":        31,
		"MemberPermissionChangeEvent":          32,
		"MemberMuteEvent":                      33,
		"MemberUnmuteEvent":                    34,
		"MemberHonorChangeEvent":               35,
		"NewFriendRequestEvent":                36,
		"MemberJoinRequestEvent":               37,
		"BotInvitedJoinGroupRequestEvent":      38,
		"OtherClientOnlineEvent":               39,
		"OtherClientOfflineEvent":              40,
		"CommandExecutedEvent":                 41,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{1}
}

type MessageObjectType int32

const (
	MessageObjectType_Source     MessageObjectType = 0
	MessageObjectType_Quote      MessageObjectType = 1
	MessageObjectType_At         MessageObjectType = 2
	MessageObjectType_AtAll      MessageObjectType = 3
	MessageObjectType_Face       MessageObjectType = 4
	MessageObjectType_Plain      MessageObjectType = 5
	MessageObjectType_Image      MessageObjectType = 6
	MessageObjectType_FlashImage MessageObjectType = 7
	MessageObjectType_Voice      MessageObjectType = 8
	MessageObjectType_Xml        MessageObjectType = 9
	MessageObjectType_Json       MessageObjectType = 10
	MessageObjectType_App        MessageObjectType = 11
	MessageObjectType_Poke       MessageObjectType = 12
	MessageObjectType_Dice       MessageObjectType = 13
	MessageObjectType_MusicShare MessageObjectType = 14
	MessageObjectType_Forward    MessageObjectType = 15
	MessageObjectType_File       MessageObjectType = 16
	MessageObjectType_MiraiCode  MessageObjectType = 17
)

// Enum value maps for MessageObjectType.
var (
	MessageObjectType_name = map[int32]string{
		0:  "Source",
		1:  "Quote",
		2:  "At",
		3:  "AtAll",
		4:  "Face",
		5:  "Plain",
		6:  "Image",
		7:  "FlashImage",
		8:  "Voice",
		9:  "Xml",
		10: "Json",
		11: "App",
		12: "Poke",
		13: "Dice",
		14: "MusicShare",
		15: "Forward",
		16: "File",
		17: "MiraiCode",
	}
	MessageObjectType_value = map[string]int32{
		"Source":     0,
		"Quote":      1,
		"At":         2,
		"AtAll":      3,
		"Face":       4,
		"Plain":      5,
		"Image":      6,
		"FlashImage": 7,
		"Voice":      8,
		"Xml":        9,
		"Json":       10,
		"App":        11,
		"Poke":       12,
		"Dice":       13,
		"MusicShare": 14,
		"Forward":    15,
		"File":       16,
		"MiraiCode":  17,
	}
)

func (x MessageObjectType) Enum() *MessageObjectType {
	p := new(MessageObjectType)
	*p = x
	return p
}

func (x MessageObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[2].Descriptor()
}

func (MessageObjectType) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[2]
}

func (x MessageObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageObjectType.Descriptor instead.
func (MessageObjectType) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{2}
}

type Permission int32

const (
	Permission_OWNER         Permission = 0
	Permission_ADMINISTRATOR Permission = 1
	Permission_MEMBER        Permission = 2
)

// Enum value maps for Permission.
var (
	Permission_name = map[int32]string{
		0: "OWNER",
		1: "ADMINISTRATOR",
		2: "MEMBER",
	}
	Permission_value = map[string]int32{
		"OWNER":         0,
		"ADMINISTRATOR": 1,
		"MEMBER":        2,
	}
)

func (x Permission) Enum() *Permission {
	p := new(Permission)
	*p = x
	return p
}

func (x Permission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[3].Descriptor()
}

func (Permission) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[3]
}

func (x Permission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permission.Descriptor instead.
func (Permission) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{3}
}

type Sex int32

const (
	Sex_UNKNOWN Sex = 0
	Sex_MALE    Sex = 1
	Sex_FEMALE  Sex = 2
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "UNKNOWN",
		1: "MALE",
		2: "FEMALE",
	}
	Sex_value = map[string]int32{
		"UNKNOWN": 0,
		"MALE":    1,
		"FEMALE":  2,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[4].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[4]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{4}
}

type Subject_NudgeContextType int32

const (
	Subject_Friend   Subject_NudgeContextType = 0
	Subject_Group    Subject_NudgeContextType = 1
	Subject_Stranger Subject_NudgeContextType = 2
)

// Enum value maps for Subject_NudgeContextType.
var (
	Subject_NudgeContextType_name = map[int32]string{
		0: "Friend",
		1: "Group",
		2: "Stranger",
	}
	Subject_NudgeContextType_value = map[string]int32{
		"Friend":   0,
		"Group":    1,
		"Stranger": 2,
	}
)

func (x Subject_NudgeContextType) Enum() *Subject_NudgeContextType {
	p := new(Subject_NudgeContextType)
	*p = x
	return p
}

func (x Subject_NudgeContextType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subject_NudgeContextType) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[5].Descriptor()
}

func (Subject_NudgeContextType) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[5]
}

func (x Subject_NudgeContextType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subject_NudgeContextType.Descriptor instead.
func (Subject_NudgeContextType) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{8, 0}
}

type SendNudgeParam_NudgeContextType int32

const (
	SendNudgeParam_Friend   SendNudgeParam_NudgeContextType = 0
	SendNudgeParam_Group    SendNudgeParam_NudgeContextType = 1
	SendNudgeParam_Stranger SendNudgeParam_NudgeContextType = 2
)

// Enum value maps for SendNudgeParam_NudgeContextType.
var (
	SendNudgeParam_NudgeContextType_name = map[int32]string{
		0: "Friend",
		1: "Group",
		2: "Stranger",
	}
	SendNudgeParam_NudgeContextType_value = map[string]int32{
		"Friend":   0,
		"Group":    1,
		"Stranger": 2,
	}
)

func (x SendNudgeParam_NudgeContextType) Enum() *SendNudgeParam_NudgeContextType {
	p := new(SendNudgeParam_NudgeContextType)
	*p = x
	return p
}

func (x SendNudgeParam_NudgeContextType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendNudgeParam_NudgeContextType) Descriptor() protoreflect.EnumDescriptor {
	return file_mirai_proto_enumTypes[6].Descriptor()
}

func (SendNudgeParam_NudgeContextType) Type() protoreflect.EnumType {
	return &file_mirai_proto_enumTypes[6]
}

func (x SendNudgeParam_NudgeContextType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendNudgeParam_NudgeContextType.Descriptor instead.
func (SendNudgeParam_NudgeContextType) EnumDescriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{16, 0}
}

type InitParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerifyKey      string         `protobuf:"bytes,1,opt,name=verifyKey,proto3" json:"verifyKey,omitempty"`
	SessionKey     string         `protobuf:"bytes,2,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	Qq             int64          `protobuf:"varint,3,opt,name=qq,proto3" json:"qq,omitempty"`
	MessageChannel MessageChannel `protobuf:"varint,4,opt,name=MessageChannel,proto3,enum=mirai.MessageChannel" json:"MessageChannel,omitempty"`
}

func (x *InitParam) Reset() {
	*x = InitParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitParam) ProtoMessage() {}

func (x *InitParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitParam.ProtoReflect.Descriptor instead.
func (*InitParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{0}
}

func (x *InitParam) GetVerifyKey() string {
	if x != nil {
		return x.VerifyKey
	}
	return ""
}

func (x *InitParam) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *InitParam) GetQq() int64 {
	if x != nil {
		return x.Qq
	}
	return 0
}

func (x *InitParam) GetMessageChannel() MessageChannel {
	if x != nil {
		return x.MessageChannel
	}
	return MessageChannel_message
}

type SendFriendMessageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target       int64            `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Quote        int64            `protobuf:"varint,2,opt,name=quote,proto3" json:"quote,omitempty"`
	MessageChain []*MessageObject `protobuf:"bytes,3,rep,name=messageChain,proto3" json:"messageChain,omitempty"`
	BotQQNumber  *int64           `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *SendFriendMessageParam) Reset() {
	*x = SendFriendMessageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFriendMessageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendMessageParam) ProtoMessage() {}

func (x *SendFriendMessageParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendMessageParam.ProtoReflect.Descriptor instead.
func (*SendFriendMessageParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{1}
}

func (x *SendFriendMessageParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *SendFriendMessageParam) GetQuote() int64 {
	if x != nil {
		return x.Quote
	}
	return 0
}

func (x *SendFriendMessageParam) GetMessageChain() []*MessageObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

func (x *SendFriendMessageParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type SendGroupMessageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target       int64            `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Quote        int64            `protobuf:"varint,2,opt,name=quote,proto3" json:"quote,omitempty"`
	MessageChain []*MessageObject `protobuf:"bytes,3,rep,name=messageChain,proto3" json:"messageChain,omitempty"`
	BotQQNumber  *int64           `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *SendGroupMessageParam) Reset() {
	*x = SendGroupMessageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMessageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMessageParam) ProtoMessage() {}

func (x *SendGroupMessageParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMessageParam.ProtoReflect.Descriptor instead.
func (*SendGroupMessageParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{2}
}

func (x *SendGroupMessageParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *SendGroupMessageParam) GetQuote() int64 {
	if x != nil {
		return x.Quote
	}
	return 0
}

func (x *SendGroupMessageParam) GetMessageChain() []*MessageObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

func (x *SendGroupMessageParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type SendTempMessageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qq           int64            `protobuf:"varint,1,opt,name=qq,proto3" json:"qq,omitempty"`
	Group        int64            `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	Quote        int64            `protobuf:"varint,3,opt,name=quote,proto3" json:"quote,omitempty"`
	MessageChain []*MessageObject `protobuf:"bytes,4,rep,name=messageChain,proto3" json:"messageChain,omitempty"`
	BotQQNumber  *int64           `protobuf:"varint,5,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *SendTempMessageParam) Reset() {
	*x = SendTempMessageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTempMessageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTempMessageParam) ProtoMessage() {}

func (x *SendTempMessageParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTempMessageParam.ProtoReflect.Descriptor instead.
func (*SendTempMessageParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{3}
}

func (x *SendTempMessageParam) GetQq() int64 {
	if x != nil {
		return x.Qq
	}
	return 0
}

func (x *SendTempMessageParam) GetGroup() int64 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *SendTempMessageParam) GetQuote() int64 {
	if x != nil {
		return x.Quote
	}
	return 0
}

func (x *SendTempMessageParam) GetMessageChain() []*MessageObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

func (x *SendTempMessageParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type GetMessageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Message `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMessageResult) Reset() {
	*x = GetMessageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageResult) ProtoMessage() {}

func (x *GetMessageResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageResult.ProtoReflect.Descriptor instead.
func (*GetMessageResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessageResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMessageResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMessageResult) GetData() *Message {
	if x != nil {
		return x.Data
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         MessageType      `protobuf:"varint,1,opt,name=type,proto3,enum=mirai.MessageType" json:"type,omitempty"`
	MessageChain []*MessageObject `protobuf:"bytes,2,rep,name=messageChain,proto3" json:"messageChain,omitempty"`
	Qq           *int64           `protobuf:"varint,3,opt,name=qq,proto3,oneof" json:"qq,omitempty"`
	// inputting status
	Friend    *Friend `protobuf:"bytes,4,opt,name=friend,proto3,oneof" json:"friend,omitempty"`
	Inputting *bool   `protobuf:"varint,5,opt,name=inputting,proto3,oneof" json:"inputting,omitempty"`
	// nickname changed
	From *string `protobuf:"bytes,6,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To   *string `protobuf:"bytes,7,opt,name=to,proto3,oneof" json:"to,omitempty"`
	//bot permission
	Origin  *string `protobuf:"bytes,8,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	Current *string `protobuf:"bytes,9,opt,name=current,proto3,oneof" json:"current,omitempty"`
	Group   *Group  `protobuf:"bytes,10,opt,name=group,proto3,oneof" json:"group,omitempty"`
	//bot mute
	DurationSeconds *int32          `protobuf:"varint,11,opt,name=durationSeconds,proto3,oneof" json:"durationSeconds,omitempty"`
	Operator        *structpb.Value `protobuf:"bytes,12,opt,name=operator,proto3,oneof" json:"operator,omitempty"`
	Invitor         *Member         `protobuf:"bytes,13,opt,name=invitor,proto3,oneof" json:"invitor,omitempty"`
	//group recall
	AuthorId  *int64 `protobuf:"varint,14,opt,name=authorId,proto3,oneof" json:"authorId,omitempty"`
	MessageId *int64 `protobuf:"varint,15,opt,name=messageId,proto3,oneof" json:"messageId,omitempty"`
	Time      *int64 `protobuf:"varint,16,opt,name=time,proto3,oneof" json:"time,omitempty"`
	//Nudge
	FromId  *int64   `protobuf:"varint,17,opt,name=fromId,proto3,oneof" json:"fromId,omitempty"`
	Subject *Subject `protobuf:"bytes,18,opt,name=subject,proto3,oneof" json:"subject,omitempty"`
	Action  *string  `protobuf:"bytes,19,opt,name=action,proto3,oneof" json:"action,omitempty"`
	Suffix  *string  `protobuf:"bytes,20,opt,name=suffix,proto3,oneof" json:"suffix,omitempty"`
	Target  *int64   `protobuf:"varint,21,opt,name=target,proto3,oneof" json:"target,omitempty"`
	//confessTalk
	IsByBot *bool `protobuf:"varint,22,opt,name=isByBot,proto3,oneof" json:"isByBot,omitempty"`
	//member join
	Member *Member `protobuf:"bytes,23,opt,name=member,proto3,oneof" json:"member,omitempty"`
	Honor  *string `protobuf:"bytes,24,opt,name=honor,proto3,oneof" json:"honor,omitempty"`
	//event
	EventId   *int64           `protobuf:"varint,25,opt,name=eventId,proto3,oneof" json:"eventId,omitempty"`
	GroupId   *int64           `protobuf:"varint,26,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	GroupName *string          `protobuf:"bytes,27,opt,name=groupName,proto3,oneof" json:"groupName,omitempty"`
	Nick      *string          `protobuf:"bytes,28,opt,name=nick,proto3,oneof" json:"nick,omitempty"`
	Message   *string          `protobuf:"bytes,29,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Client    *Client          `protobuf:"bytes,30,opt,name=client,proto3,oneof" json:"client,omitempty"`
	Kind      *int64           `protobuf:"varint,31,opt,name=kind,proto3,oneof" json:"kind,omitempty"`
	Args      []*MessageObject `protobuf:"bytes,32,rep,name=args,proto3" json:"args,omitempty"`
	//message detail
	Sender *Sender `protobuf:"bytes,33,opt,name=sender,proto3,oneof" json:"sender,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{5}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_FriendMessage
}

func (x *Message) GetMessageChain() []*MessageObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

func (x *Message) GetQq() int64 {
	if x != nil && x.Qq != nil {
		return *x.Qq
	}
	return 0
}

func (x *Message) GetFriend() *Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

func (x *Message) GetInputting() bool {
	if x != nil && x.Inputting != nil {
		return *x.Inputting
	}
	return false
}

func (x *Message) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *Message) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *Message) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *Message) GetCurrent() string {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return ""
}

func (x *Message) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Message) GetDurationSeconds() int32 {
	if x != nil && x.DurationSeconds != nil {
		return *x.DurationSeconds
	}
	return 0
}

func (x *Message) GetOperator() *structpb.Value {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *Message) GetInvitor() *Member {
	if x != nil {
		return x.Invitor
	}
	return nil
}

func (x *Message) GetAuthorId() int64 {
	if x != nil && x.AuthorId != nil {
		return *x.AuthorId
	}
	return 0
}

func (x *Message) GetMessageId() int64 {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return 0
}

func (x *Message) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Message) GetFromId() int64 {
	if x != nil && x.FromId != nil {
		return *x.FromId
	}
	return 0
}

func (x *Message) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Message) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *Message) GetSuffix() string {
	if x != nil && x.Suffix != nil {
		return *x.Suffix
	}
	return ""
}

func (x *Message) GetTarget() int64 {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return 0
}

func (x *Message) GetIsByBot() bool {
	if x != nil && x.IsByBot != nil {
		return *x.IsByBot
	}
	return false
}

func (x *Message) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Message) GetHonor() string {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return ""
}

func (x *Message) GetEventId() int64 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *Message) GetGroupId() int64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *Message) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *Message) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Message) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Message) GetKind() int64 {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return 0
}

func (x *Message) GetArgs() []*MessageObject {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Message) GetSender() *Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

type Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberName         *string     `protobuf:"bytes,2,opt,name=memberName,proto3,oneof" json:"memberName,omitempty"`
	Permission         *Permission `protobuf:"varint,3,opt,name=permission,proto3,enum=mirai.Permission,oneof" json:"permission,omitempty"`
	SpecialTitle       *string     `protobuf:"bytes,4,opt,name=specialTitle,proto3,oneof" json:"specialTitle,omitempty"`
	JoinTimestamp      *int64      `protobuf:"varint,5,opt,name=joinTimestamp,proto3,oneof" json:"joinTimestamp,omitempty"`
	LastSpeakTimestamp *int64      `protobuf:"varint,6,opt,name=lastSpeakTimestamp,proto3,oneof" json:"lastSpeakTimestamp,omitempty"`
	MuteTimeRemaining  *int32      `protobuf:"varint,7,opt,name=muteTimeRemaining,proto3,oneof" json:"muteTimeRemaining,omitempty"`
	Group              *Group      `protobuf:"bytes,8,opt,name=group,proto3,oneof" json:"group,omitempty"`
	Nickname           *string     `protobuf:"bytes,9,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	Remark             *string     `protobuf:"bytes,10,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Platform           *string     `protobuf:"bytes,11,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
}

func (x *Sender) Reset() {
	*x = Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sender) ProtoMessage() {}

func (x *Sender) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sender.ProtoReflect.Descriptor instead.
func (*Sender) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{6}
}

func (x *Sender) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sender) GetMemberName() string {
	if x != nil && x.MemberName != nil {
		return *x.MemberName
	}
	return ""
}

func (x *Sender) GetPermission() Permission {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return Permission_OWNER
}

func (x *Sender) GetSpecialTitle() string {
	if x != nil && x.SpecialTitle != nil {
		return *x.SpecialTitle
	}
	return ""
}

func (x *Sender) GetJoinTimestamp() int64 {
	if x != nil && x.JoinTimestamp != nil {
		return *x.JoinTimestamp
	}
	return 0
}

func (x *Sender) GetLastSpeakTimestamp() int64 {
	if x != nil && x.LastSpeakTimestamp != nil {
		return *x.LastSpeakTimestamp
	}
	return 0
}

func (x *Sender) GetMuteTimeRemaining() int32 {
	if x != nil && x.MuteTimeRemaining != nil {
		return *x.MuteTimeRemaining
	}
	return 0
}

func (x *Sender) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Sender) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *Sender) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *Sender) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{7}
}

func (x *Client) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Client) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type Subject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind Subject_NudgeContextType `protobuf:"varint,2,opt,name=kind,proto3,enum=mirai.Subject_NudgeContextType" json:"kind,omitempty"`
}

func (x *Subject) Reset() {
	*x = Subject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{8}
}

func (x *Subject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Subject) GetKind() Subject_NudgeContextType {
	if x != nil {
		return x.Kind
	}
	return Subject_Friend
}

type MessageObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MessageObjectType `protobuf:"varint,1,opt,name=type,proto3,enum=mirai.MessageObjectType" json:"type,omitempty"`
	//Source
	Id   *structpb.Value `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Time *int64          `protobuf:"varint,3,opt,name=time,proto3,oneof" json:"time,omitempty"`
	//Quote
	GroupId  *int64           `protobuf:"varint,4,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
	SenderId *int64           `protobuf:"varint,5,opt,name=senderId,proto3,oneof" json:"senderId,omitempty"`
	TargetId *int64           `protobuf:"varint,6,opt,name=targetId,proto3,oneof" json:"targetId,omitempty"`
	Origin   []*MessageObject `protobuf:"bytes,7,rep,name=origin,proto3" json:"origin,omitempty"`
	//At
	Display *string `protobuf:"bytes,8,opt,name=display,proto3,oneof" json:"display,omitempty"`
	//Face
	FaceId *int32 `protobuf:"varint,9,opt,name=faceId,proto3,oneof" json:"faceId,omitempty"`
	//FaceOrPoke
	Name *string `protobuf:"bytes,10,opt,name=name,proto3,oneof" json:"name,omitempty"`
	//Plain
	Text *string `protobuf:"bytes,11,opt,name=text,proto3,oneof" json:"text,omitempty"`
	//Image
	ImageId *string `protobuf:"bytes,12,opt,name=imageId,proto3,oneof" json:"imageId,omitempty"`
	Url     *string `protobuf:"bytes,13,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Path    *string `protobuf:"bytes,14,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Base64  *string `protobuf:"bytes,15,opt,name=base64,proto3,oneof" json:"base64,omitempty"`
	//Voice
	VoiceId *string `protobuf:"bytes,16,opt,name=voiceId,proto3,oneof" json:"voiceId,omitempty"`
	Length  *int64  `protobuf:"varint,17,opt,name=length,proto3,oneof" json:"length,omitempty"`
	//XML
	Xml *string `protobuf:"bytes,18,opt,name=xml,proto3,oneof" json:"xml,omitempty"`
	//JSON
	Json *string `protobuf:"bytes,19,opt,name=json,proto3,oneof" json:"json,omitempty"`
	//APP
	Content *string `protobuf:"bytes,20,opt,name=content,proto3,oneof" json:"content,omitempty"`
	//Dice
	Value *int32 `protobuf:"varint,21,opt,name=value,proto3,oneof" json:"value,omitempty"`
	//MusicShare
	Kind       *string `protobuf:"bytes,22,opt,name=kind,proto3,oneof" json:"kind,omitempty"`
	Title      *string `protobuf:"bytes,23,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Summary    *string `protobuf:"bytes,24,opt,name=summary,proto3,oneof" json:"summary,omitempty"`
	JumpUrl    *string `protobuf:"bytes,25,opt,name=jumpUrl,proto3,oneof" json:"jumpUrl,omitempty"`
	PictureUrl *string `protobuf:"bytes,26,opt,name=pictureUrl,proto3,oneof" json:"pictureUrl,omitempty"`
	MusicUrl   *string `protobuf:"bytes,27,opt,name=musicUrl,proto3,oneof" json:"musicUrl,omitempty"`
	Brief      *string `protobuf:"bytes,28,opt,name=brief,proto3,oneof" json:"brief,omitempty"`
	//ForwardMessage
	NodeList []*MessageObject `protobuf:"bytes,29,rep,name=nodeList,proto3" json:"nodeList,omitempty"`
	//File
	Size *int64  `protobuf:"varint,30,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Code *string `protobuf:"bytes,31,opt,name=code,proto3,oneof" json:"code,omitempty"`
}

func (x *MessageObject) Reset() {
	*x = MessageObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageObject) ProtoMessage() {}

func (x *MessageObject) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageObject.ProtoReflect.Descriptor instead.
func (*MessageObject) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{9}
}

func (x *MessageObject) GetType() MessageObjectType {
	if x != nil {
		return x.Type
	}
	return MessageObjectType_Source
}

func (x *MessageObject) GetId() *structpb.Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MessageObject) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MessageObject) GetGroupId() int64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *MessageObject) GetSenderId() int64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *MessageObject) GetTargetId() int64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *MessageObject) GetOrigin() []*MessageObject {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *MessageObject) GetDisplay() string {
	if x != nil && x.Display != nil {
		return *x.Display
	}
	return ""
}

func (x *MessageObject) GetFaceId() int32 {
	if x != nil && x.FaceId != nil {
		return *x.FaceId
	}
	return 0
}

func (x *MessageObject) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MessageObject) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *MessageObject) GetImageId() string {
	if x != nil && x.ImageId != nil {
		return *x.ImageId
	}
	return ""
}

func (x *MessageObject) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *MessageObject) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *MessageObject) GetBase64() string {
	if x != nil && x.Base64 != nil {
		return *x.Base64
	}
	return ""
}

func (x *MessageObject) GetVoiceId() string {
	if x != nil && x.VoiceId != nil {
		return *x.VoiceId
	}
	return ""
}

func (x *MessageObject) GetLength() int64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *MessageObject) GetXml() string {
	if x != nil && x.Xml != nil {
		return *x.Xml
	}
	return ""
}

func (x *MessageObject) GetJson() string {
	if x != nil && x.Json != nil {
		return *x.Json
	}
	return ""
}

func (x *MessageObject) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *MessageObject) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *MessageObject) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *MessageObject) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MessageObject) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *MessageObject) GetJumpUrl() string {
	if x != nil && x.JumpUrl != nil {
		return *x.JumpUrl
	}
	return ""
}

func (x *MessageObject) GetPictureUrl() string {
	if x != nil && x.PictureUrl != nil {
		return *x.PictureUrl
	}
	return ""
}

func (x *MessageObject) GetMusicUrl() string {
	if x != nil && x.MusicUrl != nil {
		return *x.MusicUrl
	}
	return ""
}

func (x *MessageObject) GetBrief() string {
	if x != nil && x.Brief != nil {
		return *x.Brief
	}
	return ""
}

func (x *MessageObject) GetNodeList() []*MessageObject {
	if x != nil {
		return x.NodeList
	}
	return nil
}

func (x *MessageObject) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *MessageObject) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

type ForwardNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     int64            `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Time         int64            `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	SenderName   string           `protobuf:"bytes,3,opt,name=senderName,proto3" json:"senderName,omitempty"`
	MessageChain []*MessageObject `protobuf:"bytes,4,rep,name=messageChain,proto3" json:"messageChain,omitempty"`
	MessageId    int64            `protobuf:"varint,5,opt,name=messageId,proto3" json:"messageId,omitempty"`
}

func (x *ForwardNode) Reset() {
	*x = ForwardNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardNode) ProtoMessage() {}

func (x *ForwardNode) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardNode.ProtoReflect.Descriptor instead.
func (*ForwardNode) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{10}
}

func (x *ForwardNode) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *ForwardNode) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ForwardNode) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ForwardNode) GetMessageChain() []*MessageObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

func (x *ForwardNode) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type SelfParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotQQNumber int64 `protobuf:"varint,1,opt,name=BotQQNumber,proto3" json:"BotQQNumber,omitempty"`
}

func (x *SelfParam) Reset() {
	*x = SelfParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfParam) ProtoMessage() {}

func (x *SelfParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfParam.ProtoReflect.Descriptor instead.
func (*SelfParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{11}
}

func (x *SelfParam) GetBotQQNumber() int64 {
	if x != nil {
		return x.BotQQNumber
	}
	return 0
}

type GetMessageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *GetMessageParam) Reset() {
	*x = GetMessageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageParam) ProtoMessage() {}

func (x *GetMessageParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageParam.ProtoReflect.Descriptor instead.
func (*GetMessageParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{12}
}

func (x *GetMessageParam) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMessageParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type ListMemberParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *ListMemberParam) Reset() {
	*x = ListMemberParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberParam) ProtoMessage() {}

func (x *ListMemberParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberParam.ProtoReflect.Descriptor instead.
func (*ListMemberParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{13}
}

func (x *ListMemberParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ListMemberParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type GetFriendParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *GetFriendParam) Reset() {
	*x = GetFriendParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendParam) ProtoMessage() {}

func (x *GetFriendParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendParam.ProtoReflect.Descriptor instead.
func (*GetFriendParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{14}
}

func (x *GetFriendParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *GetFriendParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type GetMemberParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,3,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *GetMemberParam) Reset() {
	*x = GetMemberParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberParam) ProtoMessage() {}

func (x *GetMemberParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberParam.ProtoReflect.Descriptor instead.
func (*GetMemberParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{15}
}

func (x *GetMemberParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *GetMemberParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *GetMemberParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type SendNudgeParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64                           `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Subject     int64                           `protobuf:"varint,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Kind        SendNudgeParam_NudgeContextType `protobuf:"varint,3,opt,name=kind,proto3,enum=mirai.SendNudgeParam_NudgeContextType" json:"kind,omitempty"`
	BotQQNumber *int64                          `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *SendNudgeParam) Reset() {
	*x = SendNudgeParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNudgeParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNudgeParam) ProtoMessage() {}

func (x *SendNudgeParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNudgeParam.ProtoReflect.Descriptor instead.
func (*SendNudgeParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{16}
}

func (x *SendNudgeParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *SendNudgeParam) GetSubject() int64 {
	if x != nil {
		return x.Subject
	}
	return 0
}

func (x *SendNudgeParam) GetKind() SendNudgeParam_NudgeContextType {
	if x != nil {
		return x.Kind
	}
	return SendNudgeParam_Friend
}

func (x *SendNudgeParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type RecallParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *RecallParam) Reset() {
	*x = RecallParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecallParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallParam) ProtoMessage() {}

func (x *RecallParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallParam.ProtoReflect.Descriptor instead.
func (*RecallParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{17}
}

func (x *RecallParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *RecallParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type ListFileParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path             string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target           int64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	WithDownloadInfo bool   `protobuf:"varint,4,opt,name=withDownloadInfo,proto3" json:"withDownloadInfo,omitempty"`
	Offset           int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Size             int32  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	BotQQNumber      *int64 `protobuf:"varint,7,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *ListFileParam) Reset() {
	*x = ListFileParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileParam) ProtoMessage() {}

func (x *ListFileParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileParam.ProtoReflect.Descriptor instead.
func (*ListFileParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{18}
}

func (x *ListFileParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListFileParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListFileParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ListFileParam) GetWithDownloadInfo() bool {
	if x != nil {
		return x.WithDownloadInfo
	}
	return false
}

func (x *ListFileParam) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListFileParam) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListFileParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type GetFileInfoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path             string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target           int64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	WithDownloadInfo bool   `protobuf:"varint,4,opt,name=withDownloadInfo,proto3" json:"withDownloadInfo,omitempty"`
	BotQQNumber      *int64 `protobuf:"varint,5,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *GetFileInfoParam) Reset() {
	*x = GetFileInfoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoParam) ProtoMessage() {}

func (x *GetFileInfoParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoParam.ProtoReflect.Descriptor instead.
func (*GetFileInfoParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{19}
}

func (x *GetFileInfoParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFileInfoParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetFileInfoParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *GetFileInfoParam) GetWithDownloadInfo() bool {
	if x != nil {
		return x.WithDownloadInfo
	}
	return false
}

func (x *GetFileInfoParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type FileMkdirParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target        int64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	DirectoryName string `protobuf:"bytes,4,opt,name=directoryName,proto3" json:"directoryName,omitempty"`
	BotQQNumber   *int64 `protobuf:"varint,5,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *FileMkdirParam) Reset() {
	*x = FileMkdirParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMkdirParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMkdirParam) ProtoMessage() {}

func (x *FileMkdirParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMkdirParam.ProtoReflect.Descriptor instead.
func (*FileMkdirParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{20}
}

func (x *FileMkdirParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileMkdirParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileMkdirParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *FileMkdirParam) GetDirectoryName() string {
	if x != nil {
		return x.DirectoryName
	}
	return ""
}

func (x *FileMkdirParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type FileDeleteParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path        string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target      int64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *FileDeleteParam) Reset() {
	*x = FileDeleteParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDeleteParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteParam) ProtoMessage() {}

func (x *FileDeleteParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteParam.ProtoReflect.Descriptor instead.
func (*FileDeleteParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{21}
}

func (x *FileDeleteParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileDeleteParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileDeleteParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *FileDeleteParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type FileMoveParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path        string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target      int64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	MoveTo      string `protobuf:"bytes,4,opt,name=moveTo,proto3" json:"moveTo,omitempty"`
	MoveToPath  string `protobuf:"bytes,5,opt,name=moveToPath,proto3" json:"moveToPath,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,6,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *FileMoveParam) Reset() {
	*x = FileMoveParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMoveParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMoveParam) ProtoMessage() {}

func (x *FileMoveParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMoveParam.ProtoReflect.Descriptor instead.
func (*FileMoveParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{22}
}

func (x *FileMoveParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileMoveParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileMoveParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *FileMoveParam) GetMoveTo() string {
	if x != nil {
		return x.MoveTo
	}
	return ""
}

func (x *FileMoveParam) GetMoveToPath() string {
	if x != nil {
		return x.MoveToPath
	}
	return ""
}

func (x *FileMoveParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type FileRenameParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path        string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Target      int64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	RenameTo    string `protobuf:"bytes,4,opt,name=renameTo,proto3" json:"renameTo,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,5,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *FileRenameParam) Reset() {
	*x = FileRenameParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRenameParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRenameParam) ProtoMessage() {}

func (x *FileRenameParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRenameParam.ProtoReflect.Descriptor instead.
func (*FileRenameParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{23}
}

func (x *FileRenameParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileRenameParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileRenameParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *FileRenameParam) GetRenameTo() string {
	if x != nil {
		return x.RenameTo
	}
	return ""
}

func (x *FileRenameParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type DeleteFriendParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *DeleteFriendParam) Reset() {
	*x = DeleteFriendParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendParam) ProtoMessage() {}

func (x *DeleteFriendParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendParam.ProtoReflect.Descriptor instead.
func (*DeleteFriendParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteFriendParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *DeleteFriendParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type MuteParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Time        int32  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *MuteParam) Reset() {
	*x = MuteParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteParam) ProtoMessage() {}

func (x *MuteParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteParam.ProtoReflect.Descriptor instead.
func (*MuteParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{25}
}

func (x *MuteParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *MuteParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MuteParam) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MuteParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type UnmuteParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,3,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *UnmuteParam) Reset() {
	*x = UnmuteParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteParam) ProtoMessage() {}

func (x *UnmuteParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteParam.ProtoReflect.Descriptor instead.
func (*UnmuteParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{26}
}

func (x *UnmuteParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *UnmuteParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UnmuteParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type KickParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Msg         string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *KickParam) Reset() {
	*x = KickParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickParam) ProtoMessage() {}

func (x *KickParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickParam.ProtoReflect.Descriptor instead.
func (*KickParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{27}
}

func (x *KickParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *KickParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *KickParam) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *KickParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type QuitParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *QuitParam) Reset() {
	*x = QuitParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitParam) ProtoMessage() {}

func (x *QuitParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitParam.ProtoReflect.Descriptor instead.
func (*QuitParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{28}
}

func (x *QuitParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *QuitParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type MuteAllParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *MuteAllParam) Reset() {
	*x = MuteAllParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteAllParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteAllParam) ProtoMessage() {}

func (x *MuteAllParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteAllParam.ProtoReflect.Descriptor instead.
func (*MuteAllParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{29}
}

func (x *MuteAllParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *MuteAllParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type UnmuteAllParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *UnmuteAllParam) Reset() {
	*x = UnmuteAllParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteAllParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteAllParam) ProtoMessage() {}

func (x *UnmuteAllParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteAllParam.ProtoReflect.Descriptor instead.
func (*UnmuteAllParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{30}
}

func (x *UnmuteAllParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *UnmuteAllParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type SetEssenceParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *SetEssenceParam) Reset() {
	*x = SetEssenceParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEssenceParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEssenceParam) ProtoMessage() {}

func (x *SetEssenceParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEssenceParam.ProtoReflect.Descriptor instead.
func (*SetEssenceParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{31}
}

func (x *SetEssenceParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *SetEssenceParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type GetGroupConfigParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,2,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *GetGroupConfigParam) Reset() {
	*x = GetGroupConfigParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupConfigParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupConfigParam) ProtoMessage() {}

func (x *GetGroupConfigParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupConfigParam.ProtoReflect.Descriptor instead.
func (*GetGroupConfigParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{32}
}

func (x *GetGroupConfigParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *GetGroupConfigParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type UpdateGroupConfigParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64        `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Config      *GroupConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	BotQQNumber *int64       `protobuf:"varint,3,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *UpdateGroupConfigParam) Reset() {
	*x = UpdateGroupConfigParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupConfigParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupConfigParam) ProtoMessage() {}

func (x *UpdateGroupConfigParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupConfigParam.ProtoReflect.Descriptor instead.
func (*UpdateGroupConfigParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateGroupConfigParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *UpdateGroupConfigParam) GetConfig() *GroupConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateGroupConfigParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type GroupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Announcement      string `protobuf:"bytes,2,opt,name=announcement,proto3" json:"announcement,omitempty"`
	ConfessTalk       string `protobuf:"bytes,3,opt,name=confessTalk,proto3" json:"confessTalk,omitempty"`
	AllowMemberInvite string `protobuf:"bytes,4,opt,name=allowMemberInvite,proto3" json:"allowMemberInvite,omitempty"`
	AutoApprove       string `protobuf:"bytes,5,opt,name=autoApprove,proto3" json:"autoApprove,omitempty"`
	AnonymousChat     string `protobuf:"bytes,6,opt,name=anonymousChat,proto3" json:"anonymousChat,omitempty"`
}

func (x *GroupConfig) Reset() {
	*x = GroupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupConfig) ProtoMessage() {}

func (x *GroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupConfig.ProtoReflect.Descriptor instead.
func (*GroupConfig) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{34}
}

func (x *GroupConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupConfig) GetAnnouncement() string {
	if x != nil {
		return x.Announcement
	}
	return ""
}

func (x *GroupConfig) GetConfessTalk() string {
	if x != nil {
		return x.ConfessTalk
	}
	return ""
}

func (x *GroupConfig) GetAllowMemberInvite() string {
	if x != nil {
		return x.AllowMemberInvite
	}
	return ""
}

func (x *GroupConfig) GetAutoApprove() string {
	if x != nil {
		return x.AutoApprove
	}
	return ""
}

func (x *GroupConfig) GetAnonymousChat() string {
	if x != nil {
		return x.AnonymousChat
	}
	return ""
}

type GetMemberInfoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,3,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *GetMemberInfoParam) Reset() {
	*x = GetMemberInfoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberInfoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberInfoParam) ProtoMessage() {}

func (x *GetMemberInfoParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberInfoParam.ProtoReflect.Descriptor instead.
func (*GetMemberInfoParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{35}
}

func (x *GetMemberInfoParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *GetMemberInfoParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *GetMemberInfoParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type UpdateMemberInfoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64       `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64       `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Info        *MemberInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	BotQQNumber *int64      `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *UpdateMemberInfoParam) Reset() {
	*x = UpdateMemberInfoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberInfoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberInfoParam) ProtoMessage() {}

func (x *UpdateMemberInfoParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberInfoParam.ProtoReflect.Descriptor instead.
func (*UpdateMemberInfoParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateMemberInfoParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *UpdateMemberInfoParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateMemberInfoParam) GetInfo() *MemberInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UpdateMemberInfoParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SpecialTitle string `protobuf:"bytes,2,opt,name=specialTitle,proto3" json:"specialTitle,omitempty"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{37}
}

func (x *MemberInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberInfo) GetSpecialTitle() string {
	if x != nil {
		return x.SpecialTitle
	}
	return ""
}

type SetMemberAdminParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      int64  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Assign      bool   `protobuf:"varint,3,opt,name=assign,proto3" json:"assign,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,4,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *SetMemberAdminParam) Reset() {
	*x = SetMemberAdminParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMemberAdminParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMemberAdminParam) ProtoMessage() {}

func (x *SetMemberAdminParam) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMemberAdminParam.ProtoReflect.Descriptor instead.
func (*SetMemberAdminParam) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{38}
}

func (x *SetMemberAdminParam) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *SetMemberAdminParam) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SetMemberAdminParam) GetAssign() bool {
	if x != nil {
		return x.Assign
	}
	return false
}

func (x *SetMemberAdminParam) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type NewFriendRequestEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId     int64  `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	FromId      int64  `protobuf:"varint,2,opt,name=fromId,proto3" json:"fromId,omitempty"`
	GroupId     int64  `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Operate     int32  `protobuf:"varint,4,opt,name=operate,proto3" json:"operate,omitempty"`
	Message     string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,6,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *NewFriendRequestEventResponse) Reset() {
	*x = NewFriendRequestEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFriendRequestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFriendRequestEventResponse) ProtoMessage() {}

func (x *NewFriendRequestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFriendRequestEventResponse.ProtoReflect.Descriptor instead.
func (*NewFriendRequestEventResponse) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{39}
}

func (x *NewFriendRequestEventResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *NewFriendRequestEventResponse) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *NewFriendRequestEventResponse) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *NewFriendRequestEventResponse) GetOperate() int32 {
	if x != nil {
		return x.Operate
	}
	return 0
}

func (x *NewFriendRequestEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewFriendRequestEventResponse) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type MemberJoinRequestEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId     int64  `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	FromId      int64  `protobuf:"varint,2,opt,name=fromId,proto3" json:"fromId,omitempty"`
	GroupId     int64  `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Operate     int32  `protobuf:"varint,4,opt,name=operate,proto3" json:"operate,omitempty"`
	Message     string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,6,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *MemberJoinRequestEventResponse) Reset() {
	*x = MemberJoinRequestEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberJoinRequestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberJoinRequestEventResponse) ProtoMessage() {}

func (x *MemberJoinRequestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberJoinRequestEventResponse.ProtoReflect.Descriptor instead.
func (*MemberJoinRequestEventResponse) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{40}
}

func (x *MemberJoinRequestEventResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *MemberJoinRequestEventResponse) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *MemberJoinRequestEventResponse) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *MemberJoinRequestEventResponse) GetOperate() int32 {
	if x != nil {
		return x.Operate
	}
	return 0
}

func (x *MemberJoinRequestEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MemberJoinRequestEventResponse) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type BotInvitedJoinGroupRequestEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId     int64  `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	FromId      int64  `protobuf:"varint,2,opt,name=fromId,proto3" json:"fromId,omitempty"`
	GroupId     int64  `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Operate     int32  `protobuf:"varint,4,opt,name=operate,proto3" json:"operate,omitempty"`
	Message     string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	BotQQNumber *int64 `protobuf:"varint,6,opt,name=BotQQNumber,proto3,oneof" json:"BotQQNumber,omitempty"`
}

func (x *BotInvitedJoinGroupRequestEventResponse) Reset() {
	*x = BotInvitedJoinGroupRequestEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotInvitedJoinGroupRequestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInvitedJoinGroupRequestEventResponse) ProtoMessage() {}

func (x *BotInvitedJoinGroupRequestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInvitedJoinGroupRequestEventResponse.ProtoReflect.Descriptor instead.
func (*BotInvitedJoinGroupRequestEventResponse) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{41}
}

func (x *BotInvitedJoinGroupRequestEventResponse) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *BotInvitedJoinGroupRequestEventResponse) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *BotInvitedJoinGroupRequestEventResponse) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *BotInvitedJoinGroupRequestEventResponse) GetOperate() int32 {
	if x != nil {
		return x.Operate
	}
	return 0
}

func (x *BotInvitedJoinGroupRequestEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BotInvitedJoinGroupRequestEventResponse) GetBotQQNumber() int64 {
	if x != nil && x.BotQQNumber != nil {
		return *x.BotQQNumber
	}
	return 0
}

type UniversalResponseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UniversalResponseResult) Reset() {
	*x = UniversalResponseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniversalResponseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalResponseResult) ProtoMessage() {}

func (x *UniversalResponseResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalResponseResult.ProtoReflect.Descriptor instead.
func (*UniversalResponseResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{42}
}

func (x *UniversalResponseResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UniversalResponseResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AboutResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *About `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *AboutResult) Reset() {
	*x = AboutResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AboutResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AboutResult) ProtoMessage() {}

func (x *AboutResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AboutResult.ProtoReflect.Descriptor instead.
func (*AboutResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{43}
}

func (x *AboutResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AboutResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AboutResult) GetData() *About {
	if x != nil {
		return x.Data
	}
	return nil
}

type About struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *About) Reset() {
	*x = About{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *About) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*About) ProtoMessage() {}

func (x *About) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use About.ProtoReflect.Descriptor instead.
func (*About) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{44}
}

func (x *About) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ListFriendResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*Friend `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListFriendResult) Reset() {
	*x = ListFriendResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendResult) ProtoMessage() {}

func (x *ListFriendResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendResult.ProtoReflect.Descriptor instead.
func (*ListFriendResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{45}
}

func (x *ListFriendResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListFriendResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListFriendResult) GetData() []*Friend {
	if x != nil {
		return x.Data
	}
	return nil
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{46}
}

func (x *Friend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Friend) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Friend) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListGroupResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*Group `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListGroupResult) Reset() {
	*x = ListGroupResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupResult) ProtoMessage() {}

func (x *ListGroupResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupResult.ProtoReflect.Descriptor instead.
func (*ListGroupResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{47}
}

func (x *ListGroupResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListGroupResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListGroupResult) GetData() []*Group {
	if x != nil {
		return x.Data
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Permission Permission `protobuf:"varint,3,opt,name=permission,proto3,enum=mirai.Permission" json:"permission,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{48}
}

func (x *Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetPermission() Permission {
	if x != nil {
		return x.Permission
	}
	return Permission_OWNER
}

type ListMemberResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*Member `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMemberResult) Reset() {
	*x = ListMemberResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberResult) ProtoMessage() {}

func (x *ListMemberResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberResult.ProtoReflect.Descriptor instead.
func (*ListMemberResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{49}
}

func (x *ListMemberResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMemberResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListMemberResult) GetData() []*Member {
	if x != nil {
		return x.Data
	}
	return nil
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberName         string     `protobuf:"bytes,2,opt,name=memberName,proto3" json:"memberName,omitempty"`
	Permission         Permission `protobuf:"varint,3,opt,name=permission,proto3,enum=mirai.Permission" json:"permission,omitempty"`
	SpecialTitle       string     `protobuf:"bytes,4,opt,name=specialTitle,proto3" json:"specialTitle,omitempty"`
	JoinTimestamp      int64      `protobuf:"varint,5,opt,name=joinTimestamp,proto3" json:"joinTimestamp,omitempty"`
	LastSpeakTimestamp int64      `protobuf:"varint,6,opt,name=lastSpeakTimestamp,proto3" json:"lastSpeakTimestamp,omitempty"`
	MuteTimeRemaining  int32      `protobuf:"varint,7,opt,name=muteTimeRemaining,proto3" json:"muteTimeRemaining,omitempty"`
	Group              *Group     `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{50}
}

func (x *Member) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Member) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *Member) GetPermission() Permission {
	if x != nil {
		return x.Permission
	}
	return Permission_OWNER
}

func (x *Member) GetSpecialTitle() string {
	if x != nil {
		return x.SpecialTitle
	}
	return ""
}

func (x *Member) GetJoinTimestamp() int64 {
	if x != nil {
		return x.JoinTimestamp
	}
	return 0
}

func (x *Member) GetLastSpeakTimestamp() int64 {
	if x != nil {
		return x.LastSpeakTimestamp
	}
	return 0
}

func (x *Member) GetMuteTimeRemaining() int32 {
	if x != nil {
		return x.MuteTimeRemaining
	}
	return 0
}

func (x *Member) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetProfileResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32   `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string  `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`
	Nickname *string `protobuf:"bytes,1,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	Email    *string `protobuf:"bytes,2,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Age      *int32  `protobuf:"varint,3,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Level    *int32  `protobuf:"varint,4,opt,name=level,proto3,oneof" json:"level,omitempty"`
	Sign     *string `protobuf:"bytes,5,opt,name=sign,proto3,oneof" json:"sign,omitempty"`
	Sex      *Sex    `protobuf:"varint,6,opt,name=sex,proto3,enum=mirai.Sex,oneof" json:"sex,omitempty"`
}

func (x *GetProfileResult) Reset() {
	*x = GetProfileResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileResult) ProtoMessage() {}

func (x *GetProfileResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileResult.ProtoReflect.Descriptor instead.
func (*GetProfileResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{51}
}

func (x *GetProfileResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProfileResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetProfileResult) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *GetProfileResult) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *GetProfileResult) GetAge() int32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *GetProfileResult) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *GetProfileResult) GetSign() string {
	if x != nil && x.Sign != nil {
		return *x.Sign
	}
	return ""
}

func (x *GetProfileResult) GetSex() Sex {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return Sex_UNKNOWN
}

type UniversalSendMessageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MessageId *int64 `protobuf:"varint,3,opt,name=messageId,proto3,oneof" json:"messageId,omitempty"`
}

func (x *UniversalSendMessageResult) Reset() {
	*x = UniversalSendMessageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniversalSendMessageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalSendMessageResult) ProtoMessage() {}

func (x *UniversalSendMessageResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalSendMessageResult.ProtoReflect.Descriptor instead.
func (*UniversalSendMessageResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{52}
}

func (x *UniversalSendMessageResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UniversalSendMessageResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UniversalSendMessageResult) GetMessageId() int64 {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return 0
}

type ListFileResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*FileObject `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListFileResult) Reset() {
	*x = ListFileResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileResult) ProtoMessage() {}

func (x *ListFileResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileResult.ProtoReflect.Descriptor instead.
func (*ListFileResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{53}
}

func (x *ListFileResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListFileResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListFileResult) GetData() []*FileObject {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id           string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Path         string            `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Parent       *FileObject       `protobuf:"bytes,4,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Contact      *FileContact      `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	IsFile       bool              `protobuf:"varint,6,opt,name=isFile,proto3" json:"isFile,omitempty"`
	IsDirectory  bool              `protobuf:"varint,7,opt,name=isDirectory,proto3" json:"isDirectory,omitempty"`
	DownloadInfo *FileDownloadInfo `protobuf:"bytes,8,opt,name=downloadInfo,proto3,oneof" json:"downloadInfo,omitempty"`
}

func (x *FileObject) Reset() {
	*x = FileObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileObject) ProtoMessage() {}

func (x *FileObject) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileObject.ProtoReflect.Descriptor instead.
func (*FileObject) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{54}
}

func (x *FileObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileObject) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileObject) GetParent() *FileObject {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *FileObject) GetContact() *FileContact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *FileObject) GetIsFile() bool {
	if x != nil {
		return x.IsFile
	}
	return false
}

func (x *FileObject) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

func (x *FileObject) GetDownloadInfo() *FileDownloadInfo {
	if x != nil {
		return x.DownloadInfo
	}
	return nil
}

type FileContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       *string     `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Permission *Permission `protobuf:"varint,3,opt,name=permission,proto3,enum=mirai.Permission,oneof" json:"permission,omitempty"`
	Nickname   *string     `protobuf:"bytes,4,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	Remark     *string     `protobuf:"bytes,5,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *FileContact) Reset() {
	*x = FileContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileContact) ProtoMessage() {}

func (x *FileContact) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileContact.ProtoReflect.Descriptor instead.
func (*FileContact) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{55}
}

func (x *FileContact) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileContact) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FileContact) GetPermission() Permission {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return Permission_OWNER
}

func (x *FileContact) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *FileContact) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type FileDownloadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha1           string `protobuf:"bytes,1,opt,name=sha1,proto3" json:"sha1,omitempty"`
	Md5            string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	DownloadTimes  int32  `protobuf:"varint,3,opt,name=downloadTimes,proto3" json:"downloadTimes,omitempty"`
	UploaderId     int64  `protobuf:"varint,4,opt,name=uploaderId,proto3" json:"uploaderId,omitempty"`
	UploadTime     int64  `protobuf:"varint,5,opt,name=uploadTime,proto3" json:"uploadTime,omitempty"`
	LastModifyTime int64  `protobuf:"varint,6,opt,name=lastModifyTime,proto3" json:"lastModifyTime,omitempty"`
	Url            string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *FileDownloadInfo) Reset() {
	*x = FileDownloadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadInfo) ProtoMessage() {}

func (x *FileDownloadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadInfo.ProtoReflect.Descriptor instead.
func (*FileDownloadInfo) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{56}
}

func (x *FileDownloadInfo) GetSha1() string {
	if x != nil {
		return x.Sha1
	}
	return ""
}

func (x *FileDownloadInfo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileDownloadInfo) GetDownloadTimes() int32 {
	if x != nil {
		return x.DownloadTimes
	}
	return 0
}

func (x *FileDownloadInfo) GetUploaderId() int64 {
	if x != nil {
		return x.UploaderId
	}
	return 0
}

func (x *FileDownloadInfo) GetUploadTime() int64 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

func (x *FileDownloadInfo) GetLastModifyTime() int64 {
	if x != nil {
		return x.LastModifyTime
	}
	return 0
}

func (x *FileDownloadInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetFileInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FileObject `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *GetFileInfoResult) Reset() {
	*x = GetFileInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoResult) ProtoMessage() {}

func (x *GetFileInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoResult.ProtoReflect.Descriptor instead.
func (*GetFileInfoResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{57}
}

func (x *GetFileInfoResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFileInfoResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetFileInfoResult) GetData() *FileObject {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileMkdirResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *FileObject `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *FileMkdirResult) Reset() {
	*x = FileMkdirResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMkdirResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMkdirResult) ProtoMessage() {}

func (x *FileMkdirResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMkdirResult.ProtoReflect.Descriptor instead.
func (*FileMkdirResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{58}
}

func (x *FileMkdirResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileMkdirResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileMkdirResult) GetData() *FileObject {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetGroupConfigResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              *int32  `protobuf:"varint,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Msg               *int32  `protobuf:"varint,2,opt,name=msg,proto3,oneof" json:"msg,omitempty"`
	Name              *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Announcement      *string `protobuf:"bytes,4,opt,name=announcement,proto3,oneof" json:"announcement,omitempty"`
	ConfessTalk       *bool   `protobuf:"varint,5,opt,name=confessTalk,proto3,oneof" json:"confessTalk,omitempty"`
	AllowMemberInvite *bool   `protobuf:"varint,6,opt,name=allowMemberInvite,proto3,oneof" json:"allowMemberInvite,omitempty"`
	AutoApprove       *bool   `protobuf:"varint,7,opt,name=autoApprove,proto3,oneof" json:"autoApprove,omitempty"`
	AnonymousChat     *bool   `protobuf:"varint,8,opt,name=anonymousChat,proto3,oneof" json:"anonymousChat,omitempty"`
}

func (x *GetGroupConfigResult) Reset() {
	*x = GetGroupConfigResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupConfigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupConfigResult) ProtoMessage() {}

func (x *GetGroupConfigResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupConfigResult.ProtoReflect.Descriptor instead.
func (*GetGroupConfigResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{59}
}

func (x *GetGroupConfigResult) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GetGroupConfigResult) GetMsg() int32 {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return 0
}

func (x *GetGroupConfigResult) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetGroupConfigResult) GetAnnouncement() string {
	if x != nil && x.Announcement != nil {
		return *x.Announcement
	}
	return ""
}

func (x *GetGroupConfigResult) GetConfessTalk() bool {
	if x != nil && x.ConfessTalk != nil {
		return *x.ConfessTalk
	}
	return false
}

func (x *GetGroupConfigResult) GetAllowMemberInvite() bool {
	if x != nil && x.AllowMemberInvite != nil {
		return *x.AllowMemberInvite
	}
	return false
}

func (x *GetGroupConfigResult) GetAutoApprove() bool {
	if x != nil && x.AutoApprove != nil {
		return *x.AutoApprove
	}
	return false
}

func (x *GetGroupConfigResult) GetAnonymousChat() bool {
	if x != nil && x.AnonymousChat != nil {
		return *x.AnonymousChat
	}
	return false
}

type GetMemberInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code               *int32      `protobuf:"varint,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Msg                *int32      `protobuf:"varint,2,opt,name=msg,proto3,oneof" json:"msg,omitempty"`
	Id                 *int64      `protobuf:"varint,3,opt,name=id,proto3,oneof" json:"id,omitempty"`
	MemberName         *string     `protobuf:"bytes,4,opt,name=memberName,proto3,oneof" json:"memberName,omitempty"`
	SpecialTitle       *string     `protobuf:"bytes,5,opt,name=specialTitle,proto3,oneof" json:"specialTitle,omitempty"`
	Permission         *Permission `protobuf:"varint,6,opt,name=permission,proto3,enum=mirai.Permission,oneof" json:"permission,omitempty"`
	JoinTimestamp      *int64      `protobuf:"varint,7,opt,name=joinTimestamp,proto3,oneof" json:"joinTimestamp,omitempty"`
	LastSpeakTimestamp *int64      `protobuf:"varint,8,opt,name=lastSpeakTimestamp,proto3,oneof" json:"lastSpeakTimestamp,omitempty"`
	MuteTimeRemaining  *int32      `protobuf:"varint,9,opt,name=muteTimeRemaining,proto3,oneof" json:"muteTimeRemaining,omitempty"`
	Group              *Group      `protobuf:"bytes,10,opt,name=group,proto3,oneof" json:"group,omitempty"`
}

func (x *GetMemberInfoResult) Reset() {
	*x = GetMemberInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mirai_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberInfoResult) ProtoMessage() {}

func (x *GetMemberInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_mirai_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberInfoResult.ProtoReflect.Descriptor instead.
func (*GetMemberInfoResult) Descriptor() ([]byte, []int) {
	return file_mirai_proto_rawDescGZIP(), []int{60}
}

func (x *GetMemberInfoResult) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GetMemberInfoResult) GetMsg() int32 {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return 0
}

func (x *GetMemberInfoResult) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetMemberInfoResult) GetMemberName() string {
	if x != nil && x.MemberName != nil {
		return *x.MemberName
	}
	return ""
}

func (x *GetMemberInfoResult) GetSpecialTitle() string {
	if x != nil && x.SpecialTitle != nil {
		return *x.SpecialTitle
	}
	return ""
}

func (x *GetMemberInfoResult) GetPermission() Permission {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return Permission_OWNER
}

func (x *GetMemberInfoResult) GetJoinTimestamp() int64 {
	if x != nil && x.JoinTimestamp != nil {
		return *x.JoinTimestamp
	}
	return 0
}

func (x *GetMemberInfoResult) GetLastSpeakTimestamp() int64 {
	if x != nil && x.LastSpeakTimestamp != nil {
		return *x.LastSpeakTimestamp
	}
	return 0
}

func (x *GetMemberInfoResult) GetMuteTimeRemaining() int32 {
	if x != nil && x.MuteTimeRemaining != nil {
		return *x.MuteTimeRemaining
	}
	return 0
}

func (x *GetMemberInfoResult) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

var File_mirai_proto protoreflect.FileDescriptor

var file_mirai_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x71, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x71, 0x71, 0x12, 0x3d,
	0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xb7, 0x01,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51,
	0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xc3, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x71, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69,
	0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xe7, 0x0b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x13, 0x0a, 0x02, 0x71, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x02, 0x71, 0x71, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x01, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x13, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x02, 0x74,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x07, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x08, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x48, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0b, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x0f, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x12, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x69, 0x73, 0x42, 0x79, 0x42, 0x6f, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x13, 0x52, 0x07, 0x69, 0x73, 0x42, 0x79, 0x42, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x14, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x68, 0x6f,
	0x6e, 0x6f, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x05, 0x68, 0x6f, 0x6e,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x48, 0x16, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x17, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x1a, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x1b, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1c, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x1d, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x71, 0x71,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x6f, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x42, 0x79, 0x42, 0x6f, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x68,
	0x6f, 0x6e, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6b,
	0x69, 0x6e, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xd6,
	0x04, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70,
	0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x11, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x11, 0x6d, 0x75,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x06, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x34, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x87, 0x01,
	0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x37,
	0x0a, 0x10, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x10, 0x02, 0x22, 0xf1, 0x09, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x06, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x61, 0x73,
	0x65, 0x36, 0x34, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x06, 0x62, 0x61, 0x73,
	0x65, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x78, 0x6d, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0f, 0x52, 0x03, 0x78, 0x6d, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x15, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x16, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x17, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x1d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x1a, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x78, 0x6d, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6a, 0x75, 0x6d, 0x70,
	0x55, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x0b,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b,
	0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5f,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51,
	0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x7b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xee, 0x01, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x3a, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x64, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a,
	0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x22, 0x37, 0x0a, 0x10, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x10, 0x02, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5c, 0x0a,
	0x0b, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xda, 0x01, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a,
	0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51,
	0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0xba, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a,
	0x0f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51,
	0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x62, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b,
	0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x4d, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x78, 0x0a, 0x0b, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51,
	0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42,
	0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x09, 0x4b,
	0x69, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25,
	0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x09, 0x51, 0x75, 0x69, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x5d, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x5f, 0x0a, 0x0e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x60, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b,
	0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51,
	0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0xdd, 0x01, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x54, 0x61, 0x6c, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x61, 0x6c, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x22,
	0x7f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xa9, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f,
	0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x0a,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42,
	0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd6, 0x01,
	0x0a, 0x1d, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a, 0x1e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74,
	0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xe0, 0x01, 0x0a, 0x27, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x42, 0x6f, 0x74, 0x51, 0x51, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x63, 0x0a, 0x0b, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x41, 0x62, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x05, 0x41, 0x62, 0x6f,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x06, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x59, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x5e, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xb7, 0x02, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x75, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x9c, 0x02, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69,
	0x2e, 0x53, 0x65, 0x78, 0x48, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x22, 0x73, 0x0a, 0x1a, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x02, 0x0a,
	0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x0c, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x64, 0x35, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa7, 0x03, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x61, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x61, 0x6c, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x61, 0x6c, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05,
	0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x0b, 0x61,
	0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x43, 0x68, 0x61, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54,
	0x61, 0x6c, 0x6b, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x22, 0xac, 0x04, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x05, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x11, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x11, 0x6d, 0x75, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x65, 0x61,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d,
	0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2a, 0x31, 0x0a, 0x0e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x10, 0x02, 0x2a, 0xd3, 0x08,
	0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a,
	0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x04,
	0x12, 0x12, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x06, 0x12,
	0x18, 0x0a, 0x14, 0x42, 0x6f, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x6f, 0x74,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0a, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0b, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x6f, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c,
	0x42, 0x6f, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0d, 0x12, 0x12,
	0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x6f, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x6f, 0x74,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x6f, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x12, 0x12,
	0x15, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x15,
	0x12, 0x28, 0x0a, 0x24, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x16, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10,
	0x17, 0x12, 0x20, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x41,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x18, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x61, 0x6c, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x19, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x1b, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x63,
	0x6b, 0x10, 0x1c, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x69, 0x74, 0x10, 0x1d, 0x12, 0x19, 0x0a,
	0x15, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x1e, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x1f, 0x12, 0x1f, 0x0a, 0x1b, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x20, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10,
	0x21, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x6e, 0x6d, 0x75, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x22, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x23, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x24, 0x12,
	0x1a, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x25, 0x12, 0x23, 0x0a, 0x1f, 0x42,
	0x6f, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x26,
	0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x27, 0x12, 0x1b, 0x0a, 0x17,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x28, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x29, 0x2a, 0xde, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x74, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x74, 0x41, 0x6c,
	0x6c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x61, 0x63, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x08, 0x12, 0x07,
	0x0a, 0x03, 0x58, 0x6d, 0x6c, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x73, 0x6f, 0x6e, 0x10,
	0x0a, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6f,
	0x6b, 0x65, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x69, 0x63, 0x65, 0x10, 0x0d, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x10, 0x0e, 0x12, 0x0b,
	0x0a, 0x07, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x10, 0x0f, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x69, 0x6c, 0x65, 0x10, 0x10, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x69, 0x72, 0x61, 0x69, 0x43, 0x6f,
	0x64, 0x65, 0x10, 0x11, 0x2a, 0x36, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x28, 0x0a, 0x03,
	0x53, 0x65, 0x78, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45,
	0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x32, 0x88, 0x14, 0x0a, 0x0a, 0x4d, 0x69, 0x72, 0x61, 0x69,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x10, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x2d, 0x0a, 0x05, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x12,
	0x10, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x72, 0x61,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69,
	0x2e, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x10, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x1a, 0x16, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x17, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x6d, 0x69, 0x72, 0x61,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a,
	0x11, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x21, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x21, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x21, 0x2e, 0x6d, 0x69, 0x72, 0x61,
	0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x09,
	0x53, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x6d, 0x69, 0x72, 0x61,
	0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x64, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3c, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x15, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a,
	0x18, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x16, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69,
	0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a,
	0x0a, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x6d, 0x69,
	0x72, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a,
	0x04, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x75,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x55, 0x6e, 0x6d, 0x75, 0x74,
	0x65, 0x12, 0x12, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a,
	0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x38, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x74, 0x12, 0x10, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e,
	0x51, 0x75, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61,
	0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x4d, 0x75, 0x74,
	0x65, 0x41, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4d, 0x75, 0x74,
	0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61,
	0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x55, 0x6e, 0x6d,
	0x75, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55,
	0x6e, 0x6d, 0x75, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e,
	0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a,
	0x0a, 0x53, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x6d, 0x69,
	0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x1b, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x52,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1d, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1a,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d,
	0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a,
	0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72,
	0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x69, 0x0a, 0x21, 0x53, 0x65,
	0x6e, 0x64, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6b, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x69,
	0x72, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x7d, 0x0a, 0x2b, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x1e, 0x2e, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x6d, 0x69, 0x72, 0x61, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mirai_proto_rawDescOnce sync.Once
	file_mirai_proto_rawDescData = file_mirai_proto_rawDesc
)

func file_mirai_proto_rawDescGZIP() []byte {
	file_mirai_proto_rawDescOnce.Do(func() {
		file_mirai_proto_rawDescData = protoimpl.X.CompressGZIP(file_mirai_proto_rawDescData)
	})
	return file_mirai_proto_rawDescData
}

var file_mirai_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_mirai_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_mirai_proto_goTypes = []interface{}{
	(MessageChannel)(0),                             // 0: mirai.MessageChannel
	(MessageType)(0),                                // 1: mirai.MessageType
	(MessageObjectType)(0),                          // 2: mirai.MessageObjectType
	(Permission)(0),                                 // 3: mirai.Permission
	(Sex)(0),                                        // 4: mirai.Sex
	(Subject_NudgeContextType)(0),                   // 5: mirai.Subject.NudgeContextType
	(SendNudgeParam_NudgeContextType)(0),            // 6: mirai.SendNudgeParam.NudgeContextType
	(*InitParam)(nil),                               // 7: mirai.InitParam
	(*SendFriendMessageParam)(nil),                  // 8: mirai.SendFriendMessageParam
	(*SendGroupMessageParam)(nil),                   // 9: mirai.SendGroupMessageParam
	(*SendTempMessageParam)(nil),                    // 10: mirai.SendTempMessageParam
	(*GetMessageResult)(nil),                        // 11: mirai.GetMessageResult
	(*Message)(nil),                                 // 12: mirai.Message
	(*Sender)(nil),                                  // 13: mirai.Sender
	(*Client)(nil),                                  // 14: mirai.Client
	(*Subject)(nil),                                 // 15: mirai.Subject
	(*MessageObject)(nil),                           // 16: mirai.MessageObject
	(*ForwardNode)(nil),                             // 17: mirai.ForwardNode
	(*SelfParam)(nil),                               // 18: mirai.SelfParam
	(*GetMessageParam)(nil),                         // 19: mirai.GetMessageParam
	(*ListMemberParam)(nil),                         // 20: mirai.ListMemberParam
	(*GetFriendParam)(nil),                          // 21: mirai.GetFriendParam
	(*GetMemberParam)(nil),                          // 22: mirai.GetMemberParam
	(*SendNudgeParam)(nil),                          // 23: mirai.SendNudgeParam
	(*RecallParam)(nil),                             // 24: mirai.RecallParam
	(*ListFileParam)(nil),                           // 25: mirai.ListFileParam
	(*GetFileInfoParam)(nil),                        // 26: mirai.GetFileInfoParam
	(*FileMkdirParam)(nil),                          // 27: mirai.FileMkdirParam
	(*FileDeleteParam)(nil),                         // 28: mirai.FileDeleteParam
	(*FileMoveParam)(nil),                           // 29: mirai.FileMoveParam
	(*FileRenameParam)(nil),                         // 30: mirai.FileRenameParam
	(*DeleteFriendParam)(nil),                       // 31: mirai.DeleteFriendParam
	(*MuteParam)(nil),                               // 32: mirai.MuteParam
	(*UnmuteParam)(nil),                             // 33: mirai.UnmuteParam
	(*KickParam)(nil),                               // 34: mirai.KickParam
	(*QuitParam)(nil),                               // 35: mirai.QuitParam
	(*MuteAllParam)(nil),                            // 36: mirai.MuteAllParam
	(*UnmuteAllParam)(nil),                          // 37: mirai.UnmuteAllParam
	(*SetEssenceParam)(nil),                         // 38: mirai.SetEssenceParam
	(*GetGroupConfigParam)(nil),                     // 39: mirai.GetGroupConfigParam
	(*UpdateGroupConfigParam)(nil),                  // 40: mirai.UpdateGroupConfigParam
	(*GroupConfig)(nil),                             // 41: mirai.GroupConfig
	(*GetMemberInfoParam)(nil),                      // 42: mirai.GetMemberInfoParam
	(*UpdateMemberInfoParam)(nil),                   // 43: mirai.UpdateMemberInfoParam
	(*MemberInfo)(nil),                              // 44: mirai.MemberInfo
	(*SetMemberAdminParam)(nil),                     // 45: mirai.SetMemberAdminParam
	(*NewFriendRequestEventResponse)(nil),           // 46: mirai.NewFriendRequestEventResponse
	(*MemberJoinRequestEventResponse)(nil),          // 47: mirai.MemberJoinRequestEventResponse
	(*BotInvitedJoinGroupRequestEventResponse)(nil), // 48: mirai.BotInvitedJoinGroupRequestEventResponse
	(*UniversalResponseResult)(nil),                 // 49: mirai.UniversalResponseResult
	(*AboutResult)(nil),                             // 50: mirai.AboutResult
	(*About)(nil),                                   // 51: mirai.About
	(*ListFriendResult)(nil),                        // 52: mirai.ListFriendResult
	(*Friend)(nil),                                  // 53: mirai.Friend
	(*ListGroupResult)(nil),                         // 54: mirai.ListGroupResult
	(*Group)(nil),                                   // 55: mirai.Group
	(*ListMemberResult)(nil),                        // 56: mirai.ListMemberResult
	(*Member)(nil),                                  // 57: mirai.Member
	(*GetProfileResult)(nil),                        // 58: mirai.GetProfileResult
	(*UniversalSendMessageResult)(nil),              // 59: mirai.UniversalSendMessageResult
	(*ListFileResult)(nil),                          // 60: mirai.ListFileResult
	(*FileObject)(nil),                              // 61: mirai.FileObject
	(*FileContact)(nil),                             // 62: mirai.FileContact
	(*FileDownloadInfo)(nil),                        // 63: mirai.FileDownloadInfo
	(*GetFileInfoResult)(nil),                       // 64: mirai.GetFileInfoResult
	(*FileMkdirResult)(nil),                         // 65: mirai.FileMkdirResult
	(*GetGroupConfigResult)(nil),                    // 66: mirai.GetGroupConfigResult
	(*GetMemberInfoResult)(nil),                     // 67: mirai.GetMemberInfoResult
	(*structpb.Value)(nil),                          // 68: google.protobuf.Value
}
var file_mirai_proto_depIdxs = []int32{
	0,  // 0: mirai.InitParam.MessageChannel:type_name -> mirai.MessageChannel
	16, // 1: mirai.SendFriendMessageParam.messageChain:type_name -> mirai.MessageObject
	16, // 2: mirai.SendGroupMessageParam.messageChain:type_name -> mirai.MessageObject
	16, // 3: mirai.SendTempMessageParam.messageChain:type_name -> mirai.MessageObject
	12, // 4: mirai.GetMessageResult.data:type_name -> mirai.Message
	1,  // 5: mirai.Message.type:type_name -> mirai.MessageType
	16, // 6: mirai.Message.messageChain:type_name -> mirai.MessageObject
	53, // 7: mirai.Message.friend:type_name -> mirai.Friend
	55, // 8: mirai.Message.group:type_name -> mirai.Group
	68, // 9: mirai.Message.operator:type_name -> google.protobuf.Value
	57, // 10: mirai.Message.invitor:type_name -> mirai.Member
	15, // 11: mirai.Message.subject:type_name -> mirai.Subject
	57, // 12: mirai.Message.member:type_name -> mirai.Member
	14, // 13: mirai.Message.client:type_name -> mirai.Client
	16, // 14: mirai.Message.args:type_name -> mirai.MessageObject
	13, // 15: mirai.Message.sender:type_name -> mirai.Sender
	3,  // 16: mirai.Sender.permission:type_name -> mirai.Permission
	55, // 17: mirai.Sender.group:type_name -> mirai.Group
	5,  // 18: mirai.Subject.kind:type_name -> mirai.Subject.NudgeContextType
	2,  // 19: mirai.MessageObject.type:type_name -> mirai.MessageObjectType
	68, // 20: mirai.MessageObject.id:type_name -> google.protobuf.Value
	16, // 21: mirai.MessageObject.origin:type_name -> mirai.MessageObject
	16, // 22: mirai.MessageObject.nodeList:type_name -> mirai.MessageObject
	16, // 23: mirai.ForwardNode.messageChain:type_name -> mirai.MessageObject
	6,  // 24: mirai.SendNudgeParam.kind:type_name -> mirai.SendNudgeParam.NudgeContextType
	41, // 25: mirai.UpdateGroupConfigParam.config:type_name -> mirai.GroupConfig
	44, // 26: mirai.UpdateMemberInfoParam.info:type_name -> mirai.MemberInfo
	51, // 27: mirai.AboutResult.data:type_name -> mirai.About
	53, // 28: mirai.ListFriendResult.data:type_name -> mirai.Friend
	55, // 29: mirai.ListGroupResult.data:type_name -> mirai.Group
	3,  // 30: mirai.Group.permission:type_name -> mirai.Permission
	57, // 31: mirai.ListMemberResult.data:type_name -> mirai.Member
	3,  // 32: mirai.Member.permission:type_name -> mirai.Permission
	55, // 33: mirai.Member.group:type_name -> mirai.Group
	4,  // 34: mirai.GetProfileResult.sex:type_name -> mirai.Sex
	61, // 35: mirai.ListFileResult.data:type_name -> mirai.FileObject
	61, // 36: mirai.FileObject.parent:type_name -> mirai.FileObject
	62, // 37: mirai.FileObject.contact:type_name -> mirai.FileContact
	63, // 38: mirai.FileObject.downloadInfo:type_name -> mirai.FileDownloadInfo
	3,  // 39: mirai.FileContact.permission:type_name -> mirai.Permission
	61, // 40: mirai.GetFileInfoResult.data:type_name -> mirai.FileObject
	61, // 41: mirai.FileMkdirResult.data:type_name -> mirai.FileObject
	3,  // 42: mirai.GetMemberInfoResult.permission:type_name -> mirai.Permission
	55, // 43: mirai.GetMemberInfoResult.group:type_name -> mirai.Group
	7,  // 44: mirai.MiraiAgent.Subscribe:input_type -> mirai.InitParam
	18, // 45: mirai.MiraiAgent.About:input_type -> mirai.SelfParam
	19, // 46: mirai.MiraiAgent.GetMessageFromId:input_type -> mirai.GetMessageParam
	18, // 47: mirai.MiraiAgent.ListFriend:input_type -> mirai.SelfParam
	18, // 48: mirai.MiraiAgent.ListGroup:input_type -> mirai.SelfParam
	20, // 49: mirai.MiraiAgent.ListMember:input_type -> mirai.ListMemberParam
	18, // 50: mirai.MiraiAgent.GetBotProfile:input_type -> mirai.SelfParam
	21, // 51: mirai.MiraiAgent.GetFriendProfile:input_type -> mirai.GetFriendParam
	22, // 52: mirai.MiraiAgent.GetMemberProfile:input_type -> mirai.GetMemberParam
	8,  // 53: mirai.MiraiAgent.SendFriendMessage:input_type -> mirai.SendFriendMessageParam
	9,  // 54: mirai.MiraiAgent.SendGroupMessage:input_type -> mirai.SendGroupMessageParam
	10, // 55: mirai.MiraiAgent.SendTempMessage:input_type -> mirai.SendTempMessageParam
	23, // 56: mirai.MiraiAgent.SendNudge:input_type -> mirai.SendNudgeParam
	24, // 57: mirai.MiraiAgent.Recall:input_type -> mirai.RecallParam
	25, // 58: mirai.MiraiAgent.ListFile:input_type -> mirai.ListFileParam
	26, // 59: mirai.MiraiAgent.GetFileInfo:input_type -> mirai.GetFileInfoParam
	27, // 60: mirai.MiraiAgent.FileMkdir:input_type -> mirai.FileMkdirParam
	28, // 61: mirai.MiraiAgent.FileDelete:input_type -> mirai.FileDeleteParam
	29, // 62: mirai.MiraiAgent.FileMove:input_type -> mirai.FileMoveParam
	30, // 63: mirai.MiraiAgent.FileRename:input_type -> mirai.FileRenameParam
	31, // 64: mirai.MiraiAgent.DeleteFriend:input_type -> mirai.DeleteFriendParam
	32, // 65: mirai.MiraiAgent.Mute:input_type -> mirai.MuteParam
	33, // 66: mirai.MiraiAgent.Unmute:input_type -> mirai.UnmuteParam
	34, // 67: mirai.MiraiAgent.Kick:input_type -> mirai.KickParam
	35, // 68: mirai.MiraiAgent.Quit:input_type -> mirai.QuitParam
	36, // 69: mirai.MiraiAgent.MuteAll:input_type -> mirai.MuteAllParam
	37, // 70: mirai.MiraiAgent.UnmuteAll:input_type -> mirai.UnmuteAllParam
	38, // 71: mirai.MiraiAgent.SetEssence:input_type -> mirai.SetEssenceParam
	39, // 72: mirai.MiraiAgent.GetGroupConfig:input_type -> mirai.GetGroupConfigParam
	40, // 73: mirai.MiraiAgent.UpdateGroupConfig:input_type -> mirai.UpdateGroupConfigParam
	42, // 74: mirai.MiraiAgent.GetMemberInfo:input_type -> mirai.GetMemberInfoParam
	43, // 75: mirai.MiraiAgent.UpdateMemberInfo:input_type -> mirai.UpdateMemberInfoParam
	45, // 76: mirai.MiraiAgent.SetMemberAdmin:input_type -> mirai.SetMemberAdminParam
	46, // 77: mirai.MiraiAgent.SendNewFriendRequestEventResponse:input_type -> mirai.NewFriendRequestEventResponse
	47, // 78: mirai.MiraiAgent.SendMemberJoinRequestEventResponse:input_type -> mirai.MemberJoinRequestEventResponse
	48, // 79: mirai.MiraiAgent.SendBotInvitedJoinGroupRequestEventResponse:input_type -> mirai.BotInvitedJoinGroupRequestEventResponse
	12, // 80: mirai.MiraiAgent.Subscribe:output_type -> mirai.Message
	50, // 81: mirai.MiraiAgent.About:output_type -> mirai.AboutResult
	11, // 82: mirai.MiraiAgent.GetMessageFromId:output_type -> mirai.GetMessageResult
	52, // 83: mirai.MiraiAgent.ListFriend:output_type -> mirai.ListFriendResult
	54, // 84: mirai.MiraiAgent.ListGroup:output_type -> mirai.ListGroupResult
	56, // 85: mirai.MiraiAgent.ListMember:output_type -> mirai.ListMemberResult
	58, // 86: mirai.MiraiAgent.GetBotProfile:output_type -> mirai.GetProfileResult
	58, // 87: mirai.MiraiAgent.GetFriendProfile:output_type -> mirai.GetProfileResult
	58, // 88: mirai.MiraiAgent.GetMemberProfile:output_type -> mirai.GetProfileResult
	59, // 89: mirai.MiraiAgent.SendFriendMessage:output_type -> mirai.UniversalSendMessageResult
	59, // 90: mirai.MiraiAgent.SendGroupMessage:output_type -> mirai.UniversalSendMessageResult
	59, // 91: mirai.MiraiAgent.SendTempMessage:output_type -> mirai.UniversalSendMessageResult
	49, // 92: mirai.MiraiAgent.SendNudge:output_type -> mirai.UniversalResponseResult
	49, // 93: mirai.MiraiAgent.Recall:output_type -> mirai.UniversalResponseResult
	60, // 94: mirai.MiraiAgent.ListFile:output_type -> mirai.ListFileResult
	64, // 95: mirai.MiraiAgent.GetFileInfo:output_type -> mirai.GetFileInfoResult
	65, // 96: mirai.MiraiAgent.FileMkdir:output_type -> mirai.FileMkdirResult
	49, // 97: mirai.MiraiAgent.FileDelete:output_type -> mirai.UniversalResponseResult
	49, // 98: mirai.MiraiAgent.FileMove:output_type -> mirai.UniversalResponseResult
	49, // 99: mirai.MiraiAgent.FileRename:output_type -> mirai.UniversalResponseResult
	49, // 100: mirai.MiraiAgent.DeleteFriend:output_type -> mirai.UniversalResponseResult
	49, // 101: mirai.MiraiAgent.Mute:output_type -> mirai.UniversalResponseResult
	49, // 102: mirai.MiraiAgent.Unmute:output_type -> mirai.UniversalResponseResult
	49, // 103: mirai.MiraiAgent.Kick:output_type -> mirai.UniversalResponseResult
	49, // 104: mirai.MiraiAgent.Quit:output_type -> mirai.UniversalResponseResult
	49, // 105: mirai.MiraiAgent.MuteAll:output_type -> mirai.UniversalResponseResult
	49, // 106: mirai.MiraiAgent.UnmuteAll:output_type -> mirai.UniversalResponseResult
	49, // 107: mirai.MiraiAgent.SetEssence:output_type -> mirai.UniversalResponseResult
	66, // 108: mirai.MiraiAgent.GetGroupConfig:output_type -> mirai.GetGroupConfigResult
	49, // 109: mirai.MiraiAgent.UpdateGroupConfig:output_type -> mirai.UniversalResponseResult
	67, // 110: mirai.MiraiAgent.GetMemberInfo:output_type -> mirai.GetMemberInfoResult
	49, // 111: mirai.MiraiAgent.UpdateMemberInfo:output_type -> mirai.UniversalResponseResult
	49, // 112: mirai.MiraiAgent.SetMemberAdmin:output_type -> mirai.UniversalResponseResult
	49, // 113: mirai.MiraiAgent.SendNewFriendRequestEventResponse:output_type -> mirai.UniversalResponseResult
	49, // 114: mirai.MiraiAgent.SendMemberJoinRequestEventResponse:output_type -> mirai.UniversalResponseResult
	49, // 115: mirai.MiraiAgent.SendBotInvitedJoinGroupRequestEventResponse:output_type -> mirai.UniversalResponseResult
	80, // [80:116] is the sub-list for method output_type
	44, // [44:80] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_mirai_proto_init() }
func file_mirai_proto_init() {
	if File_mirai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mirai_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFriendMessageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMessageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTempMessageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMemberParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNudgeParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecallParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMkdirParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDeleteParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMoveParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRenameParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmuteParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteAllParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmuteAllParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEssenceParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupConfigParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupConfigParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberInfoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberInfoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMemberAdminParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFriendRequestEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberJoinRequestEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotInvitedJoinGroupRequestEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniversalResponseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AboutResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*About); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMemberResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniversalSendMessageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMkdirResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupConfigResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mirai_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mirai_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[58].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[59].OneofWrappers = []interface{}{}
	file_mirai_proto_msgTypes[60].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mirai_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mirai_proto_goTypes,
		DependencyIndexes: file_mirai_proto_depIdxs,
		EnumInfos:         file_mirai_proto_enumTypes,
		MessageInfos:      file_mirai_proto_msgTypes,
	}.Build()
	File_mirai_proto = out.File
	file_mirai_proto_rawDesc = nil
	file_mirai_proto_goTypes = nil
	file_mirai_proto_depIdxs = nil
}
